{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.service.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/me/api.service.ts","./src/app/components/me/me.component.ts","./src/app/components/me/me.component.html","./src/app/components/play/play.component.ts","./src/app/components/play/play.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/app/material/material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { HttpClient } from '@angular/common/http';\n\n/*\nThe base url for the api calls\nchange this to develop the site\ndo not do test on creation form in the production endpoint\n*/\n// export const apiBaseUrl = 'https://api.thepavlovproject.com/'\nexport const apiBaseUrl = 'http://10.32.139.33:8000/'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getUserData(username): Observable<any>{\n      return this.http.get(apiBaseUrl + 'user/' + username + '/');\n  }\n\n  getUserGameData(): Observable<any>{\n    return this.http.get(apiBaseUrl + 'g/1/');\n  }\n}\n\nexport class UserGameData{\n  id: number;\n  game_pass_join_at: string;\n  xp: number;\n  level: number;\n  bits: number;\n  bits_last_farm: string;\n  bits_spent: number;\n  bits_earned: number;\n  bits_given_away: number;\n  user: number;\n  game_pass_id: number;\n}\n\nexport class UserData{\n  email: string;\n  username: string;\n  bio: string;\n  gender: string;\n  age: number;\n  country: number;\n  vip_code: number;\n}\n  \n\n  \n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PlayComponent } from './components/play/play.component';\nimport { MeComponent } from './components/me/me.component';\nimport { UserComponent } from './components/user/user.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'play', component: PlayComponent},\n  { path: 'me', component: MeComponent},\n  { path: 'u/:username', component: UserComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routingComponents = [\n  HomeComponent,\n  LoginComponent,\n  PlayComponent,\n  MeComponent,\n  UserComponent\n]","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n   \n  title = 'Hello'\n  \n  constructor(){ }\n\n}\n","\n<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <span>ThePavlovProject</span>\n    <span class=\"example-fill-remaining-space\"></span>\n    <span class=\"align-center\"></span>\n    <button mat-button routerLink='/me'>Me</button>\n    <button mat-button routerLink='/play'>Play</button>\n    <span class=\"button-set-spacer\"></span>\n    <button mat-button routerLink='/login'>Login</button>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item>\n            <mat-icon>dialpad</mat-icon>\n            <span>Redial</span>\n        </button>\n        <button mat-menu-item disabled>\n            <mat-icon>voicemail</mat-icon>\n            <span>Check voicemail</span>\n        </button>\n        <button mat-menu-item>\n            <mat-icon>notifications_off</mat-icon>\n            <span>Disable alerts</span>\n        </button>\n    </mat-menu>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http'; // for api calls\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// UI for the tool bar\nimport { MaterialModule } from './material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { HttpClient } from '@angular/common/http';\nimport { apiBaseUrl } from '../api/api.service'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  loginUser(email, password): Observable<any>{\n      const loginData = {\n        username: email,\n        password: password\n      }\n      return this.http.post(apiBaseUrl + 'auth/login/', loginData);\n  }\n\n  registerUser(email, username, password, passwordConfirmation): Observable<any>{\n    const loginData = {\n      email: email,\n      username: username,\n      password: password,\n      confirm_password: passwordConfirmation\n    }\n    return this.http.post(apiBaseUrl + 'auth/register/', loginData);\n  }\n\n  setSession(authResult) {\n    localStorage.setItem('token', authResult.idToken);\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n  }\n\n  isLoggedIn() {\n    let token = localStorage.getItem(\"expires_at\")\n    if(token != null) {\n      return true\n    }\n    return false\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Home</p>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../auth/auth.service'\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  showLoginErrorMessage = false;\n\n  showRegisterSuccessMessage = false;\n  showRegisterErrorMessage = false;\n\n  // to hide the passwd during the login\n  pswdHide1 = true;\n  pswdHide2 = true;\n\n  loginForm: FormGroup;\n  registerForm: FormGroup;\n\n  constructor(\n    private authServece: AuthService,\n    private router: Router\n  ) { }\n  \n  ngOnInit(): void {\n\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(4)])\n    });\n\n    this.registerForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      username: new FormControl('', [Validators.required, Validators.minLength(4), , Validators.pattern('[a-zA-Z0-9-_]*')]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      passwordConfirmation: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n\n  onLogin(userData) {\n    this.authServece.loginUser(\n        userData.email,\n        userData.password\n      ).subscribe(\n      response => {\n        this.router.navigate(['/me'])\n      },\n      error => {\n        console.log(error);\n        this.showLoginErrorMessage = true;\n      }\n    )\n  }\n\n  onRegister(userData) {\n    this.authServece.registerUser(\n        userData.email,\n        userData.username,\n        userData.password,\n        userData.passwordConfirmation\n      ).subscribe(\n      response => {\n        this.showRegisterSuccessMessage = true;\n        this.showRegisterErrorMessage = false;\n        window.location.reload();\n      },\n      error => {\n        console.log(error)\n        this.showRegisterErrorMessage = true;\n        this.showRegisterSuccessMessage = false;\n      }\n    )\n  }\n\n}\n\n","<div class=\"main-div\">\n    <mat-card>\n        <mat-tab-group>\n\n            <mat-tab label=\"Login\">\n                <mat-card-content >\n\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin(loginForm.value)\">\n                        <div class=\"center-align\">\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\n                                <mat-label>Enter your email</mat-label>\n                                <input matInput id=\"email\" placeholder=\"pavlov@mail.com\" formControlName=\"email\" required>\n                            </mat-form-field>\n                        </div>\n                \n                        <div class=\"center-align\">\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\n                                <mat-label>Enter your password</mat-label>\n                                <input matInput id=\"password\" [type]=\"pswdHide1 ? 'password' : 'text'\" placeholder=\"NotPaswd1234\" formControlName=\"password\">\n                                <button mat-icon-button matSuffix (click)=\"pswdHide1 = !pswdHide1\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"pswdHide1\">\n                                <mat-icon>{{pswdHide1 ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                </button>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"center-align\">\n                            <button mat-raised-button type=\"submit\" color=\"primary\">Login</button>\n                        </div>\n\n                        <div *ngIf=\"showLoginErrorMessage\" class=\"error-center-align\">\n                            <mat-chip-list>\n                                <mat-chip color=\"accent\" selected>Invalid username or password</mat-chip>\n                            </mat-chip-list>\n                        </div>\n                    </form>\n\n                </mat-card-content>\n            </mat-tab>\n\n            <mat-tab label=\"Register\">\n                <mat-card-content >\n\n                    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister(registerForm.value)\">\n                        <div class=\"center-align\">\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\n                                <mat-label>Enter your email</mat-label>\n                                <input matInput id=\"email\" placeholder=\"pavlov@example.com\" formControlName=\"email\" required>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"center-align\">\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\n                                <mat-label>Enter your Username</mat-label>\n                                <input matInput id=\"username\" placeholder=\"ChickenFrozen69\" formControlName=\"username\" required>\n                            </mat-form-field>\n                        </div>\n                \n                        <div class=\"center-align\">\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\n                                <mat-label>Enter your password</mat-label>\n                                <input matInput id=\"password\" [type]=\"pswdHide1 ? 'password' : 'text'\" placeholder=\"NotPaswd1234\" formControlName=\"password\">\n                                <button mat-icon-button matSuffix (click)=\"pswdHide1 = !pswdHide1\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"pswdHide1\">\n                                <mat-icon>{{pswdHide1 ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                </button>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"center-align\">\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\n                                <mat-label>Confirm your password</mat-label>\n                                <input matInput id=\"passwordConfirmation\" [type]=\"pswdHide2 ? 'password' : 'text'\" placeholder=\"NotPaswd1234\" formControlName=\"passwordConfirmation\">\n                                <button mat-icon-button matSuffix (click)=\"pswdHide2 = !pswdHide2\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"pswdHide2\">\n                                <mat-icon>{{pswdHide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                </button>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"center-align\">\n                            <button mat-raised-button type=\"submit\" color=\"primary\">Register</button>\n                        </div>\n\n                        <div *ngIf=\"showRegisterErrorMessage\" class=\"error-center-align\">\n                            <mat-chip-list>\n                                <mat-chip color=\"accent\" selected>Registration fails</mat-chip>\n                            </mat-chip-list>\n                        </div>\n\n                        <div *ngIf=\"showRegisterSuccessMessage\" class=\"error-center-align\">\n                            <mat-chip-list>\n                                <mat-chip color=\"primary\" selected>Registration Success</mat-chip>\n                            </mat-chip-list>\n                        </div>\n                    </form>\n\n                </mat-card-content>\n            </mat-tab>\n\n        </mat-tab-group>\n    </mat-card>\n</div>\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n    \r\n    baseUrl = 'http://10.32.139.33:8000/'\r\n    httpHeaders = new HttpHeaders({'content-type': 'application/json'})\r\n\r\n    getUserGameData(): Observable<any>{\r\n        return this.http.get(\r\n            this.baseUrl + 'g/1/',\r\n            {headers: this.httpHeaders}\r\n        );\r\n    }\r\n}\r\n\r\nexport class UserGameData{\r\n    id: number;\r\n    game_pass_join_at: string;\r\n    xp: number;\r\n    level: number;\r\n    bits: number;\r\n    bits_last_farm: string;\r\n    bits_spent: number;\r\n    bits_earned: number;\r\n    bits_given_away: number;\r\n    user: number;\r\n    game_pass_id: number;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ApiService, UserGameData } from './api.service'\n\n@Component({\n  selector: 'app-me',\n  templateUrl: './me.component.html',\n  styleUrls: ['./me.component.css']\n})\n\nexport class MeComponent implements OnInit {\n\n  data: UserGameData;\n\n  displayedColumns: string[] = ['name', 'value'];\n  levelDataSource: DataShowInterface[];\n  billDataSource: DataShowInterface[];\n  userDataSource: DataShowInterface[];\n\n  constructor(private api: ApiService) { \n    this.getUserGameData()\n  }\n\n  getUserGameData = () => {\n    this.api.getUserGameData().subscribe(\n      data => {\n        this.data = data;\n\n        this.levelDataSource = [\n          {name: 'Level', value: this.data.level},\n          {name: 'Xp', value: this.data.xp},\n        ];\n\n        this.billDataSource = [\n          {name: 'Bits', value: this.data.bits}, \n        ];\n      \n        this.userDataSource = [\n          {name: 'Physical Damage', value: 3},\n          {name: 'Magical Damage', value: 6},\n          {name: 'Physical Resistance', value: 4},\n          {name: 'Magical Resistance', value: 9}\n        ];\n\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n\n  ngOnInit(): void {\n  }\n}\n\nexport interface DataShowInterface {\n  name: string;\n  value: number;\n}\n","<mat-accordion>\n\n  <!-- Levels -->\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Levels\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <table mat-table [dataSource]=\"levelDataSource\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"value\">\n        <th mat-header-cell *matHeaderCellDef> Value </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\n      </ng-container>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </mat-expansion-panel>\n\n  <!-- Levels -->\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Bill\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <table mat-table [dataSource]=\"billDataSource\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"value\">\n        <th mat-header-cell *matHeaderCellDef> Value </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\n      </ng-container>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </mat-expansion-panel>\n\n  <!-- Levels -->\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        User\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <table mat-table [dataSource]=\"userDataSource\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"value\">\n        <th mat-header-cell *matHeaderCellDef> Value </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\n      </ng-container>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </mat-expansion-panel>\n\n</mat-accordion>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-play',\n  templateUrl: './play.component.html',\n  styleUrls: ['./play.component.css']\n})\nexport class PlayComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Play</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService, UserData }  from '../../api/api.service'\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  username: string\n  user: UserData;\n\n  panelsTelegram = [\n    {title: 'panel 1',  description: 'description 1', content: 'content 1'},\n    {title: 'panel 2',  description: 'description 2', content: 'content 2'},\n  ]\n  \n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    \n    // get the username out of the url\n    this.route.params.subscribe(\n      params => {\n        this.username = params['username'];\n\n        this.apiService.getUserData(this.username).subscribe(\n          user => {\n            this.user = user\n          },\n          error => {\n            console.log(error);\n          } \n        );\n\n      }\n    );\n\n    \n  }\n}\n","<div class=\"main-div\">\n    <mat-card class=\"main-card\">\n\n        <mat-card-header>\n            <div mat-card-avatar class=\"header-image\"></div>\n            <mat-card-title>{{user.username}}</mat-card-title>\n            <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n\n            <mat-grid-list cols=\"2\" rowHeight=\"100px\">\n                <mat-grid-tile class=\"full-width\">\n                    <mat-card>\n                        <mat-card-subtitle>Age</mat-card-subtitle>\n                        <mat-card-content>{{user.age}}</mat-card-content>\n                    </mat-card>\n                </mat-grid-tile>\n                <mat-grid-tile rows=\"2\">\n                    <mat-card>\n                        <mat-card-subtitle>Age</mat-card-subtitle>\n                        <mat-card-content>{{user.age}}</mat-card-content>\n                    </mat-card>\n                </mat-grid-tile>\n                <mat-grid-tile colspan=\"2\">\n                    <mat-card class=\"full-width\">\n                        <mat-card-subtitle>Bio</mat-card-subtitle>\n                        <mat-card-content>{{user.bio}}</mat-card-content>\n                    </mat-card>\n                </mat-grid-tile>\n            </mat-grid-list>\n    \n          </mat-card-content>\n\n    </mat-card>\n    <mat-card class=\"main-card\">\n        \n        <mat-card-title class=\"center-item\">Your Chats</mat-card-title>\n\n        <mat-tab-group mat-stretch-tabs>\n            <mat-tab label=\"Telegram\"> \n                <mat-accordion>\n                    <mat-expansion-panel *ngFor=\"let panel of panelsTelegram\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>{{panel.title}}</mat-panel-title>\n                            <mat-panel-description>{{panel.description}}</mat-panel-description>\n                        </mat-expansion-panel-header>\n                        \n                        {{panel.content}}\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </mat-tab>\n            <mat-tab label=\"Discord\"> \n                \n            </mat-tab>\n        </mat-tab-group>\n\n    </mat-card>\n</div>\n\n\n","import { NgModule } from '@angular/core';\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatTableModule} from '@angular/material/table';\nimport {CommonModule} from '@angular/common';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\n\n\nconst MaterialComponents = [\n  MatToolbarModule,\n  MatIconModule,\n  MatButtonModule,\n  MatSlideToggleModule,\n  MatCardModule,\n  MatExpansionModule,\n  MatTableModule,\n  CommonModule,\n  MatMenuModule,\n  MatInputModule,\n  MatDialogModule,\n  MatProgressSpinnerModule,\n  MatFormFieldModule,\n  MatTabsModule,\n  MatChipsModule,\n  MatGridListModule,\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}