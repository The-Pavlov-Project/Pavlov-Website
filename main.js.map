{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.service.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/me/api.service.ts","./src/app/components/me/me.component.ts","./src/app/components/me/me.component.html","./src/app/components/play/play.component.ts","./src/app/components/play/play.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/material/material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/*\r\nThe base url for the api calls\r\nchange this to develop the site\r\ndo not do test on creation form in the production endpoint\r\n*/\r\n// export const apiBaseUrl = 'https://api.thepavlovproject.com/'\r\nexport const apiBaseUrl = 'http://10.32.139.33:8000/'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUserData(username): Observable<any>{\r\n      return this.http.get(apiBaseUrl + 'user/' + username + '/');\r\n  }\r\n\r\n  getUserGameData(): Observable<any>{\r\n    return this.http.get(apiBaseUrl + 'g/1/');\r\n  }\r\n}\r\n\r\nexport class UserGameData{\r\n  id: number;\r\n  game_pass_join_at: string;\r\n  xp: number;\r\n  level: number;\r\n  bits: number;\r\n  bits_last_farm: string;\r\n  bits_spent: number;\r\n  bits_earned: number;\r\n  bits_given_away: number;\r\n  user: number;\r\n  game_pass_id: number;\r\n}\r\n\r\nexport class UserData{\r\n  email: string;\r\n  username: string;\r\n  bio: string;\r\n  gender: string;\r\n  age: number;\r\n  country: number;\r\n  vip_code: number;\r\n}\r\n  \r\n\r\n  \r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { PlayComponent } from './components/play/play.component';\r\nimport { MeComponent } from './components/me/me.component';\r\nimport { UserComponent } from './components/user/user.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'play', component: PlayComponent},\r\n  { path: 'me', component: MeComponent},\r\n  { path: 'u/:username', component: UserComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\nexport const routingComponents = [\r\n  HomeComponent,\r\n  LoginComponent,\r\n  PlayComponent,\r\n  MeComponent,\r\n  UserComponent\r\n]","import { Component, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  private isDark = true;\r\n\r\n  @HostBinding('class')\r\n  get themeMode() {\r\n    return this.isDark ? 'theme-dark' : 'theme-light';\r\n  }\r\n\r\n  switchDarkMode(isDarkMode: boolean) {\r\n    this.isDark = isDarkMode;\r\n  }\r\n}\r\n","<app-header (darkModeSwitch)=\"switchDarkMode($event)\">\r\n  <router-outlet></router-outlet>\r\n  <app-footer></app-footer>\r\n</app-header>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { HttpClientModule } from '@angular/common/http'; // for api calls\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// UI for the tool bar\r\nimport { MaterialModule } from './material/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// the header and footer module that don't have to stay in the routing module\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { apiBaseUrl } from '../api/api.service'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  loginUser(email, password): Observable<any>{\r\n      const loginData = {\r\n        username: email,\r\n        password: password\r\n      }\r\n      return this.http.post(apiBaseUrl + 'auth/login/', loginData);\r\n  }\r\n\r\n  registerUser(email, username, password, passwordConfirmation): Observable<any>{\r\n    const loginData = {\r\n      email: email,\r\n      username: username,\r\n      password: password,\r\n      confirm_password: passwordConfirmation\r\n    }\r\n    return this.http.post(apiBaseUrl + 'auth/register/', loginData);\r\n  }\r\n\r\n  setSession(authResult) {\r\n    localStorage.setItem('token', authResult.idToken);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n\r\n  isLoggedIn() {\r\n    let token = localStorage.getItem(\"expires_at\")\r\n    if(token != null) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section>\r\n  <mat-grid-list cols=\"2\" rowHeight=\"700px\">\r\n    <mat-grid-tile colspan=\"2\">\r\n      <div class=\"header\">\r\n        <h1 class=\"home-title\">The Pavlov</h1>\r\n        <h1 class=\"home-title\">Project</h1>\r\n        <h2>Take the bot experience to the next level</h2>\r\n      </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <mat-card class=\"card\">\r\n        <mat-card-header rowspan=\"1\">\r\n          <div mat-card-avatar class=\"example-header-image\"></div>\r\n          <mat-card-title class=\"card-title\">Pavlov-Bot</mat-card-title>\r\n        </mat-card-header>\r\n        <img\r\n          mat-card-image\r\n          src=\"assets/img/the-pavlov-project-logo.png\"\r\n          alt=\"Photo of a Shiba Inu\"\r\n        />\r\n        <mat-card-content>\r\n          <p>\r\n            The bot it's multiplatform and work simultaneously on Telegram and\r\n            Discord with a shared profile.\r\n          </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color=\"primary\">ADD</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n      <mat-card class=\"card\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar class=\"example-header-image\"></div>\r\n          <mat-card-title class=\"card-title\">Pvlv</mat-card-title>\r\n        </mat-card-header>\r\n        <img\r\n          mat-card-image\r\n          src=\"assets/img/the-pavlov-project-logo.png\"\r\n          alt=\"Photo of a Shiba Inu\"\r\n        />\r\n        <mat-card-content>\r\n          <p>\r\n            A full hackarable framework, to build multi platform bots writing\r\n            the code only once.\r\n          </p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color=\"primary\">CONTIBUTE</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../auth/auth.service'\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  showLoginErrorMessage = false;\r\n\r\n  showRegisterSuccessMessage = false;\r\n  showRegisterErrorMessage = false;\r\n\r\n  // to hide the passwd during the login\r\n  pswdHide1 = true;\r\n  pswdHide2 = true;\r\n\r\n  loginForm: FormGroup;\r\n  registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private authServece: AuthService,\r\n    private router: Router\r\n  ) { }\r\n  \r\n  ngOnInit(): void {\r\n\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(4)])\r\n    });\r\n\r\n    this.registerForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      username: new FormControl('', [Validators.required, Validators.minLength(4), , Validators.pattern('[a-zA-Z0-9-_]*')]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n      passwordConfirmation: new FormControl('', [Validators.required, Validators.minLength(6)])\r\n    });\r\n  }\r\n\r\n  onLogin(userData) {\r\n    this.authServece.loginUser(\r\n        userData.email,\r\n        userData.password\r\n      ).subscribe(\r\n      response => {\r\n        this.router.navigate(['/me'])\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.showLoginErrorMessage = true;\r\n      }\r\n    )\r\n  }\r\n\r\n  onRegister(userData) {\r\n    this.authServece.registerUser(\r\n        userData.email,\r\n        userData.username,\r\n        userData.password,\r\n        userData.passwordConfirmation\r\n      ).subscribe(\r\n      response => {\r\n        this.showRegisterSuccessMessage = true;\r\n        this.showRegisterErrorMessage = false;\r\n        window.location.reload();\r\n      },\r\n      error => {\r\n        console.log(error)\r\n        this.showRegisterErrorMessage = true;\r\n        this.showRegisterSuccessMessage = false;\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"main-div\">\r\n    <mat-card>\r\n        <mat-tab-group>\r\n\r\n            <mat-tab label=\"Login\">\r\n                <mat-card-content >\r\n\r\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin(loginForm.value)\">\r\n                        <div class=\"center-align\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                <mat-label>Enter your email</mat-label>\r\n                                <input matInput id=\"email\" placeholder=\"pavlov@mail.com\" formControlName=\"email\" required>\r\n                            </mat-form-field>\r\n                        </div>\r\n                \r\n                        <div class=\"center-align\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                <mat-label>Enter your password</mat-label>\r\n                                <input matInput id=\"password\" [type]=\"pswdHide1 ? 'password' : 'text'\" placeholder=\"NotPaswd1234\" formControlName=\"password\">\r\n                                <button mat-icon-button matSuffix (click)=\"pswdHide1 = !pswdHide1\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"pswdHide1\">\r\n                                <mat-icon>{{pswdHide1 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                                </button>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"center-align\">\r\n                            <button mat-raised-button type=\"submit\" color=\"primary\">Login</button>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"showLoginErrorMessage\" class=\"error-center-align\">\r\n                            <mat-chip-list>\r\n                                <mat-chip color=\"accent\" selected>Invalid username or password</mat-chip>\r\n                            </mat-chip-list>\r\n                        </div>\r\n                    </form>\r\n\r\n                </mat-card-content>\r\n            </mat-tab>\r\n\r\n            <mat-tab label=\"Register\">\r\n                <mat-card-content >\r\n\r\n                    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister(registerForm.value)\">\r\n                        <div class=\"center-align\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                <mat-label>Enter your email</mat-label>\r\n                                <input matInput id=\"email\" placeholder=\"pavlov@example.com\" formControlName=\"email\" required>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"center-align\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                <mat-label>Enter your Username</mat-label>\r\n                                <input matInput id=\"username\" placeholder=\"ChickenFrozen69\" formControlName=\"username\" required>\r\n                            </mat-form-field>\r\n                        </div>\r\n                \r\n                        <div class=\"center-align\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                <mat-label>Enter your password</mat-label>\r\n                                <input matInput id=\"password\" [type]=\"pswdHide1 ? 'password' : 'text'\" placeholder=\"NotPaswd1234\" formControlName=\"password\">\r\n                                <button mat-icon-button matSuffix (click)=\"pswdHide1 = !pswdHide1\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"pswdHide1\">\r\n                                <mat-icon>{{pswdHide1 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                                </button>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"center-align\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                <mat-label>Confirm your password</mat-label>\r\n                                <input matInput id=\"passwordConfirmation\" [type]=\"pswdHide2 ? 'password' : 'text'\" placeholder=\"NotPaswd1234\" formControlName=\"passwordConfirmation\">\r\n                                <button mat-icon-button matSuffix (click)=\"pswdHide2 = !pswdHide2\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"pswdHide2\">\r\n                                <mat-icon>{{pswdHide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                                </button>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"center-align\">\r\n                            <button mat-raised-button type=\"submit\" color=\"primary\">Register</button>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"showRegisterErrorMessage\" class=\"error-center-align\">\r\n                            <mat-chip-list>\r\n                                <mat-chip color=\"accent\" selected>Registration fails</mat-chip>\r\n                            </mat-chip-list>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"showRegisterSuccessMessage\" class=\"error-center-align\">\r\n                            <mat-chip-list>\r\n                                <mat-chip color=\"primary\" selected>Registration Success</mat-chip>\r\n                            </mat-chip-list>\r\n                        </div>\r\n                    </form>\r\n\r\n                </mat-card-content>\r\n            </mat-tab>\r\n\r\n        </mat-tab-group>\r\n    </mat-card>\r\n</div>\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n    \r\n    baseUrl = 'http://10.32.139.33:8000/'\r\n    httpHeaders = new HttpHeaders({'content-type': 'application/json'})\r\n\r\n    getUserGameData(): Observable<any>{\r\n        return this.http.get(\r\n            this.baseUrl + 'g/1/',\r\n            {headers: this.httpHeaders}\r\n        );\r\n    }\r\n}\r\n\r\nexport class UserGameData{\r\n    id: number;\r\n    game_pass_join_at: string;\r\n    xp: number;\r\n    level: number;\r\n    bits: number;\r\n    bits_last_farm: string;\r\n    bits_spent: number;\r\n    bits_earned: number;\r\n    bits_given_away: number;\r\n    user: number;\r\n    game_pass_id: number;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService, UserGameData } from './api.service'\r\n\r\n@Component({\r\n  selector: 'app-me',\r\n  templateUrl: './me.component.html',\r\n  styleUrls: ['./me.component.css']\r\n})\r\n\r\nexport class MeComponent implements OnInit {\r\n\r\n  data: UserGameData;\r\n\r\n  displayedColumns: string[] = ['name', 'value'];\r\n  levelDataSource: DataShowInterface[];\r\n  billDataSource: DataShowInterface[];\r\n  userDataSource: DataShowInterface[];\r\n\r\n  constructor(private api: ApiService) { \r\n    this.getUserGameData()\r\n  }\r\n\r\n  getUserGameData = () => {\r\n    this.api.getUserGameData().subscribe(\r\n      data => {\r\n        this.data = data;\r\n\r\n        this.levelDataSource = [\r\n          {name: 'Level', value: this.data.level},\r\n          {name: 'Xp', value: this.data.xp},\r\n        ];\r\n\r\n        this.billDataSource = [\r\n          {name: 'Bits', value: this.data.bits}, \r\n        ];\r\n      \r\n        this.userDataSource = [\r\n          {name: 'Physical Damage', value: 3},\r\n          {name: 'Magical Damage', value: 6},\r\n          {name: 'Physical Resistance', value: 4},\r\n          {name: 'Magical Resistance', value: 9}\r\n        ];\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n\r\nexport interface DataShowInterface {\r\n  name: string;\r\n  value: number;\r\n}\r\n","<mat-accordion>\r\n\r\n  <!-- Levels -->\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Levels\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <table mat-table [dataSource]=\"levelDataSource\">\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"value\">\r\n        <th mat-header-cell *matHeaderCellDef> Value </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n      </ng-container>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  </mat-expansion-panel>\r\n\r\n  <!-- Levels -->\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Bill\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <table mat-table [dataSource]=\"billDataSource\">\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"value\">\r\n        <th mat-header-cell *matHeaderCellDef> Value </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n      </ng-container>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  </mat-expansion-panel>\r\n\r\n  <!-- Levels -->\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        User\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <table mat-table [dataSource]=\"userDataSource\">\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"value\">\r\n        <th mat-header-cell *matHeaderCellDef> Value </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n      </ng-container>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  </mat-expansion-panel>\r\n\r\n</mat-accordion>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-play',\r\n  templateUrl: './play.component.html',\r\n  styleUrls: ['./play.component.css']\r\n})\r\nexport class PlayComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Play</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService, UserData }  from '../../api/api.service'\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  username: string\r\n  user: UserData;\r\n\r\n  panelsTelegram = [\r\n    {title: 'panel 1',  description: 'description 1', content: 'content 1'},\r\n    {title: 'panel 2',  description: 'description 2', content: 'content 2'},\r\n  ]\r\n  \r\n  constructor(\r\n    private apiService: ApiService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    // get the username out of the url\r\n    this.route.params.subscribe(\r\n      params => {\r\n        this.username = params['username'];\r\n\r\n        this.apiService.getUserData(this.username).subscribe(\r\n          user => {\r\n            this.user = user\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          } \r\n        );\r\n\r\n      }\r\n    );\r\n\r\n    \r\n  }\r\n}\r\n","<div class=\"main-div\">\r\n    <mat-card class=\"main-card\">\r\n\r\n        <mat-card-header>\r\n            <div mat-card-avatar class=\"header-image\"></div>\r\n            <mat-card-title>{{user.username}}</mat-card-title>\r\n            <mat-card-subtitle>Dog Breed</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n\r\n            <mat-grid-list cols=\"2\" rowHeight=\"100px\">\r\n                <mat-grid-tile class=\"full-width\">\r\n                    <mat-card>\r\n                        <mat-card-subtitle>Age</mat-card-subtitle>\r\n                        <mat-card-content>{{user.age}}</mat-card-content>\r\n                    </mat-card>\r\n                </mat-grid-tile>\r\n                <mat-grid-tile rows=\"2\">\r\n                    <mat-card>\r\n                        <mat-card-subtitle>Age</mat-card-subtitle>\r\n                        <mat-card-content>{{user.age}}</mat-card-content>\r\n                    </mat-card>\r\n                </mat-grid-tile>\r\n                <mat-grid-tile colspan=\"2\">\r\n                    <mat-card class=\"full-width\">\r\n                        <mat-card-subtitle>Bio</mat-card-subtitle>\r\n                        <mat-card-content>{{user.bio}}</mat-card-content>\r\n                    </mat-card>\r\n                </mat-grid-tile>\r\n            </mat-grid-list>\r\n    \r\n          </mat-card-content>\r\n\r\n    </mat-card>\r\n    <mat-card class=\"main-card\">\r\n        \r\n        <mat-card-title class=\"center-item\">Your Chats</mat-card-title>\r\n\r\n        <mat-tab-group mat-stretch-tabs>\r\n            <mat-tab label=\"Telegram\"> \r\n                <mat-accordion>\r\n                    <mat-expansion-panel *ngFor=\"let panel of panelsTelegram\">\r\n                        <mat-expansion-panel-header>\r\n                            <mat-panel-title>{{panel.title}}</mat-panel-title>\r\n                            <mat-panel-description>{{panel.description}}</mat-panel-description>\r\n                        </mat-expansion-panel-header>\r\n                        \r\n                        {{panel.content}}\r\n                    </mat-expansion-panel>\r\n                </mat-accordion>\r\n            </mat-tab>\r\n            <mat-tab label=\"Discord\"> \r\n                \r\n            </mat-tab>\r\n        </mat-tab-group>\r\n\r\n    </mat-card>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer\">\r\n  <!-- Footer -->\r\n  <div class=\"footer-left-content\">Pavlov</div>\r\n  <div class=\"footer-center-content\">Version 0.0.1</div>\r\n  <div class=\"footer-right-content\">\r\n    <p class=\"footer-text\">©2020 All rights reserved.</p>\r\n  </div>\r\n</footer>\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent {\r\n  @Output()\r\n  readonly darkModeSwitch = new EventEmitter<boolean>();\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver\r\n    .observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map((result) => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n  onDarkModeSwitch({ checked }: MatSlideToggleChange) {\r\n    this.darkModeSwitch.emit(checked);\r\n  }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport mode=\"over\">\r\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-list-item routerLink=\"/me\">Me</a>\r\n      <a mat-list-item routerLink=\"/play\">Play</a>\r\n      <a mat-list-item routerLink=\"/login\">Login</a>\r\n      <a mat-list-item>\r\n        <mat-slide-toggle (change)=\"onDarkModeSwitch($event)\">\r\n          Dark Mode\r\n        </mat-slide-toggle>\r\n      </a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n      >\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span>\r\n        <a routerLink=\"/\">\r\n          <img\r\n            class=\"navbar-logo\"\r\n            src=\"assets/img/the-pavlov-project-logo.png\"\r\n          />\r\n        </a>\r\n      </span>\r\n    </mat-toolbar>\r\n    <!-- Content Here -->\r\n    <ng-content></ng-content>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\nconst MaterialComponents = [\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSlideToggleModule,\r\n  MatCardModule,\r\n  MatExpansionModule,\r\n  MatTableModule,\r\n  CommonModule,\r\n  MatMenuModule,\r\n  MatInputModule,\r\n  MatDialogModule,\r\n  MatProgressSpinnerModule,\r\n  MatFormFieldModule,\r\n  MatTabsModule,\r\n  MatChipsModule,\r\n  MatGridListModule,\r\n  LayoutModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [MaterialComponents],\r\n  exports: [MaterialComponents],\r\n})\r\nexport class MaterialModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}